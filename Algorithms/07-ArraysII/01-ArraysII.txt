
- Array: Average (Warmup)
(Warm-up) Always run through some quick algorithm problems before any coding interview, to get yourself warmed up. How about this one: return the average value of an array of unsorted numbers.

- Balance Point
Write a function that returns whether the given  array has a balance point between indices, where one side’s sum is equal to the other’s. Example: [1,2,3,4,10] → true (between indices 3 & 4), but [1,2,4,2,1] → false.

- Balance Index
Here, a balance point is on an index, not between indices. Return the balance index where  sums are equal on either side (exclude its own  value). Return -1 if none exist. Ex.: [- 2,5,7,0,3] → 2, but [9,9] → -1.

- Taco Truck
Joe drives a taco truck in the booming town of Squaresburg. He uses an array of [x,y] coordinates corresponding to locations of his customers. They walk to his truck, but he is fair-minded so he wants to minimize total distance from truck to customers. City blocks are perfect squares, and every street is  two-way, at perfect right angles. He only parks by street corners (coordinates like [37,-16]). Customers only travel on streets: coordinate [2,-2] is distance 4 from [0,0]. Joe checks the array before deciding where to park. Given a customer coordinate array, return an optimal taco truck location. Example: given [ [10,0], [-1,-10], [2,4] ], return [2,0], as total distance is 25 (8+13+4).

- Array: Binary Search
Given a sorted array and a value, return whether the array contains that value. Do not sequentially  iterate the array. Instead, ‘divide and conquer’, taking advantage of the fact that the array is sorted. As  always, only use built-in functions that you are prepared to recreate (write yourself) on demand! 

- Min of Sorted-Rotated
You will be given a numerical array that has first been sorted, then rotated by an unknown amount. Find  and return the minimum value in that array. Don’t use built-in functions (surprise!). Given the input array  ["Gigli","Jay is cool","Mavis","Phoebe","Thurber","Anna","Celeste","Elon"],  you should return "Anna". Remember, do not linearly iterate the array!

- String: Binary Search
You will be given a very long string and a single character. Return whether that character is present in the string. Note: the characters in the string have been arranged so that the charCodeAt() values for  each character are monotonically ascending from the beginning of the string to the back. Use the fact  that the string is effectively sorted. Don’t use built-in functions. Note: characters may not be exactly as  you might have considered ‘alphabetized’, but char.charCodeAt() works well. Example: if your function is given the inputs (" &-0379DEFXZ[abcz|", "6"), it should return false. If instead it is  sent (" &-0379DEFXZ[abcz|", "c"), return true. Remember, don’t iterate the string linearly! 