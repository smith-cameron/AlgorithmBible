1 - SList: Back
Create a function that accepts a ListNode pointer and returns the last value in the list.
2 - SList: Remove Back
Create a standalone function that removes the last ListNode in the list and returns the new list.
3 - SList: Add Back
Create a function that creates a ListNode with given value and inserts it at end of a linked list.
4 - SList: Move Min to Front **
Create a standalone function that locates the minimum value in a linked list, and moves that node to the front of the list. Return the new list, with all nodes still present, and all (except for the new head node) in their original order.
5 - SList: Move Max to Back
Create a standalone function that locates the maximum value in a linked list, and moves that node to the back of the list. Return the new list, with all nodes still present, and all in their original order except for the node you moved to the end of the singly linked list.